#此文件是 github 工作流文件 .github/workflows/main.yml

#给工作流起名字
name: CI to Docker Hub

#定义一些事件
on:
  #当主分支push时候触发
  push:
    #指定分支
    branches: [ master ]

    #指定特定版本时触发，如 git tag -a v1.0.2，  git push origin v1.0.2
    #tags:
    #  - "v*.*.*"




#工作流有多个job组成，可以队列执行或者并行
jobs:
  build:
    runs-on: ubuntu-latest

    #step时job的一部分（本质是一个任务队列）
    steps:

      #git拉取代码
      - name: Check Out Repo
        #自动从网上下载
        uses: actions/checkout@v2


      #设置docker 构建器
      - name: Set up Docker Buildx
        id: buildx
        #自动从网上下载
        uses: docker/setup-buildx-action@v1

      #登录dockerhub(在push 之前，先登录。 防止报错，无权限访问)
      - name: Login to Docker Hub
        #自动从网上下载
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_DOCKERID }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}


      #构建和发布
      - name: Build and push
        id: docker_build
        #自动从网上下载
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: rancheng/ea-image:latest


          #可选的
          #builder: ${{ steps.buildx.outputs.name }}
          #cache-from: type=local,src=/tmp/.buildx-cache
          #cache-to: type=local,dest=/tmp/.buildx-cache
          #            - name: Image digest

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}


      #可选的（给layer 加缓存）
      #- name: Cache Docker layers
      #    uses: actions/cache@v2
      #    with:
      #      path: /tmp/.buildx-cache
      #      key: ${{ runner.os }}-buildx-${{ github.sha }}
      #      restore-keys: |
      #        ${{ runner.os }}-buildx-

